/* assets/css/game/_ui.css */

/* --- ИГРОВОЙ UI --- */

/* Подсказка для старта игры */
.game-start-prompt {
    position: fixed;
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
    z-index: 501;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 12px;
    font-family: var(--font-main);
    color: var(--text-color);
    opacity: 0;
    pointer-events: none;
    /* 
    ИСПРАВЛЕНИЕ: Убираем задержку 'transition-delay' (было 'transition: opacity 0.5s ease 1.3s;').
    JavaScript уже обеспечивает нужную паузу.
    */
    transition: opacity 0.5s ease;
}

.game-start-prompt.visible {
    opacity: 1;
}

.game-start-prompt p { margin: 0; font-size: 16px; font-weight: 700; text-transform: uppercase; }
.game-start-prompt kbd { display: inline-block; padding: 4px 8px; border: 1px solid var(--text-color); margin: 0 4px; }

/* Контейнер для верхнего UI (топливо) */
.game-ui-top {
    position: fixed;
    top: 0;
    left: calc(50% - 350px);
    width: 700px;
    height: var(--frame-padding-vertical);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 600;
    opacity: 0;
    /* ИСПРАВЛЕНИЕ: Устанавливаем время анимации 0.5с,
       чтобы оно совпадало с временем растворения корабля. */
    transition: opacity 0.5s ease-out;
}

/* Контейнер для нижнего UI (уровни) */
.game-ui-bottom {
    position: fixed;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    height: var(--frame-padding-vertical);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 600;
    opacity: 0;
    /* ИСПРАВЛЕНИЕ: То же самое время - 0.5с */
    transition: opacity 0.5s ease-out;
}

/* Делаем UI видимым, когда игра готова */
body.game-mode .game-ui-top.visible,
body.game-mode .game-ui-bottom.visible {
    opacity: 1;
}

/* --- Шкала HP --- */

/* Контейнер для всех сегментов */
#hp-bar-container {
    display: flex;
    gap: 6px;
}

.hp-segment-fill {
    width: 16px;
    height: 16px;
    background-color: var(--red-accent);
    transform-origin: left;
}

/* Анимация мерцания применяется напрямую к сегменту */
.hp-segment-fill.is-blinking {
    animation: blink-animation 0.8s infinite;
}

@keyframes blink-animation {
    0% { opacity: 1; }
    50% { opacity: 0.3; }
    100% { opacity: 1; }
}

/* Класс, который мы будем добавлять через JS для запуска анимации */
.shake-animation {
    animation: shake 0.4s ease-in-out;
}

/* Сама анимация тряски */
@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-5px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(5px);
    }
}

/* --- Индикаторы уровней --- */
#level-indicators {
    display: flex;
    gap: 6px;
}

.level-dot {
    width: 16px;
    height: 16px;
    box-sizing: border-box;
    /* Состояние 1: Неактивная (по умолчанию) */
    border: 1px solid var(--text-color);
    transition: all 0.3s ease;
}

/* Состояние 2: Текущая */
.level-dot.current {
    border-color: var(--red-accent);
}

/* Состояние 3: Пройденная */
.level-dot.completed {
    background-color: var(--red-accent);
    border-color: var(--red-accent);
}