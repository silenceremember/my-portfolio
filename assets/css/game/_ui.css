/* assets/css/game/_ui.css */

/* --- ИГРОВОЙ UI --- */

/* --- Подсказка для старта игры (ТЕКСТОВАЯ ВЕРСИЯ) --- */

/* Переменные для легкой настройки */
:root {
    --prompt-key-size: 32px;
    --prompt-key-gap: 6px;
    --prompt-border: 2px solid var(--text-color);
    /* НОВАЯ ПЕРЕМЕННАЯ: Отступ между группами клавиш */
    --prompt-wrapper-gap: 32px; 
}

.game-start-prompt {
    position: fixed;
    top: 50%; left: 50%;
    transform: translate(-50%, -50%);
    z-index: 501;
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 64px;
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.5s ease;
    font-family: var(--font-main);
    font-weight: 700;
    color: var(--text-color);
}

.game-start-prompt.visible {
    opacity: 1;
}

.prompt-section {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 12px;
}

.prompt-keys-wrapper {
    display: flex;
    align-items: center;
    /* Используем новую переменную */
    gap: var(--prompt-wrapper-gap); 
}

.prompt-title.control {
    /* 
     * Расчет: (ширина одной группы клавиш * 2) + отступ между ними
     * Ширина группы = (размер клавиши * 3) + (отступ * 2)
     */
    width: calc( (var(--prompt-key-size) * 3 + var(--prompt-key-gap) * 2) * 2 + var(--prompt-wrapper-gap) );
    border: var(--prompt-border);
    padding: 8px 18px;
    font-size: 18px;
    text-transform: uppercase;
    text-align: center; /* Центрируем текст внутри */
    box-sizing: border-box; /* Важно, чтобы padding не ломал ширину */
}

/* 
  ИСПРАВЛЕНИЕ: Заголовок "ВЫХОД" 
  Для единообразия делаем его такой же ширины.
*/
.prompt-title.exit {
    /* Копируем тот же расчет ширины */
    width: calc( (var(--prompt-key-size) * 3 + var(--prompt-key-gap) * 2) * 2 + var(--prompt-wrapper-gap) );
    border: var(--prompt-border);
    padding: 8px 18px;
    font-size: 18px;
    text-transform: uppercase;
    text-align: center;
    box-sizing: border-box;
}

/* 
  Контейнер для SVG-иконки.
  Он не имеет рамки, так как рамка встроена в сам SVG.
*/
.prompt-key {
    border: var(--prompt-border); /* <-- РАМКА ВЕРНУЛАСЬ СЮДА */
    width: var(--prompt-key-size);
    height: var(--prompt-key-size);
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 20px;
    box-sizing: border-box;
}

/* Группы клавиш (Grid-логика) */
.key-group-wasd,
.key-group-arrows {
    display: grid;
    grid-template-columns: repeat(3, var(--prompt-key-size));
    grid-template-rows: repeat(2, var(--prompt-key-size));
    gap: var(--prompt-key-gap);
    grid-template-areas:
        ". w ."
        "a s d";
}
.key-w { grid-area: w; }
.key-a { grid-area: a; }
.key-s { grid-area: s; }
.key-d { grid-area: d; }
.key-up { grid-area: w; }
.key-left { grid-area: a; }
.key-down { grid-area: s; }
.key-right { grid-area: d; }

/* Правила для SVG внутри .prompt-key */
.prompt-key svg {
    width: 100%;
    height: 100%;
}

/* Клавиша ESC (текстовая) */
.key-esc {
    border: var(--prompt-border); /* Возвращаем рамку, так как это текст */
    width: 72px;
    height: auto;
    font-size: 18px;
    padding: 6px 0;
}

/* --- Игровой HUD (ИНТЕРФЕЙС) --- */

.game-start-prompt.visible {
    opacity: 1;
}

.game-start-prompt p { margin: 0; font-size: 16px; font-weight: 700; text-transform: uppercase; }
.game-start-prompt kbd { display: inline-block; padding: 4px 8px; border: 1px solid var(--text-color); margin: 0 4px; }

/* Контейнер для верхнего UI (топливо) */
.game-ui-top {
    position: fixed;
    top: 0;
    left: calc(50% - 350px);
    width: 700px;
    height: var(--frame-padding-vertical);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 600;
    opacity: 0;
    /* ИСПРАВЛЕНИЕ: Устанавливаем время анимации 0.5с,
       чтобы оно совпадало с временем растворения корабля. */
    transition: opacity 0.5s ease-out;
}

/* Контейнер для нижнего UI (уровни) */
.game-ui-bottom {
    position: fixed;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    height: var(--frame-padding-vertical);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 600;
    opacity: 0;
    /* ИСПРАВЛЕНИЕ: То же самое время - 0.5с */
    transition: opacity 0.5s ease-out;
}

/* Делаем UI видимым, когда игра готова */
body.game-mode .game-ui-top.visible,
body.game-mode .game-ui-bottom.visible {
    opacity: 1;
}

/* --- Шкала HP --- */

/* Контейнер для всех сегментов */
#hp-bar-container {
    display: flex;
    gap: 6px;
}

.hp-segment-fill {
    width: 16px;
    height: 16px;
    background-color: var(--red-accent);
    transform-origin: left;
}

/* Анимация мерцания применяется напрямую к сегменту */
.hp-segment-fill.is-blinking {
    animation: blink-animation 0.8s infinite;
}

@keyframes blink-animation {
    0% { opacity: 1; }
    50% { opacity: 0.3; }
    100% { opacity: 1; }
}

/* Класс, который мы будем добавлять через JS для запуска анимации */
.shake-animation {
    animation: shake 0.4s ease-in-out;
}

/* Сама анимация тряски */
@keyframes shake {
    0%, 100% {
        transform: translateX(0);
    }
    10%, 30%, 50%, 70%, 90% {
        transform: translateX(-5px);
    }
    20%, 40%, 60%, 80% {
        transform: translateX(5px);
    }
}

.hp-segment-fill.pulse-animation {
    /* Добавляем transform-origin: center, чтобы масштабирование было от центра */
    transform-origin: center;
    animation: pulse 0.3s ease-out;
}

@keyframes pulse {
    0% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.4);
    }
    100% {
        transform: scale(1);
    }
}

/* --- Индикаторы уровней --- */
#level-indicators {
    display: flex;
    gap: 6px;
}

.level-dot {
    width: 16px;
    height: 16px;
    box-sizing: border-box;
    /* Состояние 1: Неактивная (по умолчанию) */
    border: 1px solid var(--text-color);
    transition: all 0.3s ease;
}

/* Состояние 2: Текущая */
.level-dot.current {
    border-color: var(--red-accent);
}

/* Состояние 3: Пройденная */
.level-dot.completed {
    background-color: var(--red-accent);
    border-color: var(--red-accent);
}