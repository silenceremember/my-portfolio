/* assets/css/components/_mobile-menu.css */

/* ==================================================================== */
/* ===         1. КНОПКА-БУРГЕР И ЕЕ ИКОНКА                       === */
/* ==================================================================== */

#burger-menu-button {
    position: fixed; 
    right: var(--frame-padding-horizontal);
    top: calc((var(--frame-padding-vertical) - var(--header-icon-size-normal)) / 2);
    width: var(--header-icon-size-normal);
    height: var(--header-icon-size-normal);
    
    z-index: 101; 
    
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s ease 0.2s, right 0s, top 0s;
}

.burger-icon {
    position: relative; 
    width: 100%; 
    height: 100%;
    overflow: hidden;
}


.burger-icon::before,
.burger-icon::after {
    content: ''; 
    position: absolute; 
    left: 0; 
    width: 100%; 
    height: 2px;
    background-color: var(--text-color);
    top: 50%;
    transform: translateX(-100%) translateY(var(--y-offset, 0));
    
    /* ИЗМЕНЕНО: Задаем одинаковые тайминги для hover и появления */
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94), 
                background-color 0.2s ease; /* <-- Оставляем это значение, оно уже правильное */
}
.burger-icon::before { --y-offset: -6px; }
.burger-icon::after  { --y-offset: 6px; }


/* --- ЛОГИКА АНИМАЦИИ ПРИ ОТКРЫТИИ/ЗАКРЫТИИ (остается без изменений) --- */
body.menu-open .burger-icon::before {
    animation: burger-to-cross-top 0.4s ease-in-out forwards;
}
body.menu-open .burger-icon::after {
    animation: burger-to-cross-bottom 0.4s ease-in-out forwards;
}
.burger-icon.is-closing::before {
    animation: cross-to-burger-top 0.4s ease-in-out forwards;
}
.burger-icon.is-closing::after {
    animation: cross-to-burger-bottom 0.4s ease-in-out forwards;
}


/* --- КЛЮЧЕВЫЕ КАДРЫ АНИМАЦИИ (остаются без изменений) --- */
@keyframes burger-to-cross-top {
    0%   { transform: translateY(-6px); }
    50%  { transform: translateY(0); }
    100% { transform: translateY(0) rotate(45deg); }
}
@keyframes burger-to-cross-bottom {
    0%   { transform: translateY(6px); }
    50%  { transform: translateY(0); }
    100% { transform: translateY(0) rotate(-45deg); }
}
@keyframes cross-to-burger-top {
    0%   { transform: translateY(0) rotate(45deg); }
    50%  { transform: translateY(0) rotate(0); }
    100% { transform: translateY(-6px); }
}
@keyframes cross-to-burger-bottom {
    0%   { transform: translateY(0) rotate(-45deg); }
    50%  { transform: translateY(0) rotate(0); }
    100% { transform: translateY(6px); }
}


/* --- ЛОГИКА ДЛЯ СОСТОЯНИЯ HOVER (остается без изменений) --- */
#burger-menu-button:hover .burger-icon::before,
#burger-menu-button:hover .burger-icon::after {
    background-color: var(--red-accent);
}


/* ==================================================================== */
/* ===         2. ОВЕРЛЕЙ И БОКОВАЯ ПАНЕЛЬ МЕНЮ                   === */
/* ==================================================================== */

#mobile-menu-overlay {
    position: fixed; 
    
    /* ИЗМЕНЕНО: Ограничиваем оверлей областью между хедером и футером */
    top: var(--frame-padding-vertical);
    bottom: var(--frame-padding-vertical);
    left: 0;
    right: 0;
    
    background-color: rgba(18, 18, 18, 0.7); 
    
    /* ИЗМЕНЕНО: z-index теперь НИЖЕ хедера (100) */
    z-index: 90;
    
    opacity: 0; visibility: hidden; pointer-events: none;
    transition: opacity 0.4s ease, visibility 0s 0.4s;
}

body[data-theme="light"] #mobile-menu-overlay {
    background-color: rgba(245, 245, 245, 0.7);
}

.mobile-nav { 
    position: fixed;
    top: 0;
    right: 0;
    width: 280px; 
    max-width: 100%;
    height: 100%;
    background-color: var(--bg-color);
    z-index: 90; 
    overflow: hidden;
    isolation: isolate;
    transform: translateX(100%);
    visibility: hidden;
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94), visibility 0s 0.4s;
    /* Все стили Flexbox и padding отсюда убраны! */
}

.mobile-nav-content {
    /* 1. Позиционируем его точно между хедером и футером */
    position: absolute;
    top: var(--frame-padding-vertical);
    bottom: var(--frame-padding-vertical);
    left: 0;
    right: 0;
    
    /* 2. КЛЮЧЕВОЕ СВОЙСТВО: Включаем вертикальную прокрутку, если контент не помещается */
    overflow-y: auto;
    
    /* 3. Возвращаем сюда всю логику Flexbox для выравнивания ссылок */
    display: flex;
    flex-direction: column;
    justify-content: center; /* Центрируем, если есть место */
    align-items: flex-end;
    gap: 20px;
    
    /* 4. Возвращаем горизонтальные отступы */
    padding: 0 10px 0 30px;
    box-sizing: border-box;
}

/* НОВЫЙ БЛОК: Создаем вертикальную линию с помощью псевдо-элемента */
.mobile-nav::before {
    content: '';
    position: absolute;
    /* Позиционируем линию точно между хедером и футером */
    top: var(--frame-padding-vertical);
    bottom: var(--frame-padding-vertical);
    left: 0;
    /* Задаем ширину и цвет линии */
    width: 1px;
    background-color: var(--border-color);
}

/* СТАЛО (ВАШ ШАБЛОН ДЛЯ НАСТРОЙКИ) */
.mobile-nav::after {
    content: '';
    position: absolute;
    top: var(--frame-padding-vertical);
    bottom: var(--frame-padding-vertical);
    left: 0;
    width: 100%;
    background-image: url('../../images/mobile-menu-bg.svg');
    
    /* 
     * === ГЛАВНАЯ НАСТРОЙКА ===
     *
     * Горизонтальная позиция (X): 45% (остается фиксированной).
     *
     * Вертикальная позиция (Y): calc( A - B );
     *      A: Базовая точка. 50% - это идеальный центр.
     *      B: Динамический сдвиг. Чем больше vh, тем сильнее фон будет
     *         смещаться ВВЕРХ на высоких экранах.
     *
     * Начните с этих значений и подбирайте их в браузере.
    */
    background-position: 45% 50%;
    
    background-repeat: no-repeat;
    background-size: auto;
    opacity: 1;
    z-index: -1;
}

.mobile-nav .nav-link {
    font-size: 20px;
    text-align: right; /* ДОБАВЛЕНО: Выравниваем текст внутри ссылки по правому краю */
}


/* ==================================================================== */
/* ===         3. СОСТОЯНИЕ ОТКРЫТОГО МЕНЮ (класс .menu-open)       === */
/* ==================================================================== */

body.menu-open #mobile-menu-overlay { 
    opacity: 1; 
    visibility: visible; 
    pointer-events: auto;
    transition: opacity 0.4s ease;
}

body.menu-open .mobile-nav {
    transform: translateX(0);
    visibility: visible;
    transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
}

/* ==================================================================== */
/* ===         4. МЕДИА-ЗАПРОС ДЛЯ ПОКАЗА БУРГЕРА                 === */
/* ==================================================================== */
@media (max-width: 799.98px) {
    #burger-menu-button { 
        opacity: 1; 
        pointer-events: auto; 
    }
    
    /* 1. Задаем конечное положение для линий */
    .burger-icon::before,
    .burger-icon::after {
        transform: translateY(var(--y-offset));
    }

    /* 2. ПЕРЕОПРЕДЕЛЯЕМ TRANSITION, чтобы delay применялся ТОЛЬКО к transform */
    .burger-icon::before {
        transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.3s,  /* transform с задержкой 0.3s */
                    background-color 0.2s ease;                             /* background-color БЕЗ задержки */
    }
    .burger-icon::after {
        transition: transform 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94) 0.35s, /* transform с задержкой 0.35s */
                    background-color 0.2s ease;                              /* background-color БЕЗ задержки */
    }
}